{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/balaravikumar/Documents/GitHub/tawnyparkmetrics.github.io/app/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport Image, { ImageProps } from 'next/image';\nimport { LucideUser, ChevronDown, ChevronUp } from 'lucide-react';\nimport Papa from 'papaparse';\n\nexport interface DraftProspect {\n  Name: string;\n  'Actual Pick': string;\n  Team: string;\n  'Pre-NBA': string;\n  Position: string;\n  Age: string;\n  'Pred. Y1 Rank': string;\n  'Pred. Y2 Rank': string;\n  'Pred. Y3 Rank': string;\n  'Avg. Rank Y1-Y3': string;\n  'Pred. Y4 Rank': string;\n  'Pred. Y5 Rank': string;\n  'Avg. Rank Y1-Y5': string;\n  Summary?: string;\n}\n\n// Define keys that can be sorted\ntype SortKey = keyof Pick<DraftProspect, \n  'Actual Pick' | \n  'Pred. Y1 Rank' | \n  'Pred. Y2 Rank' | \n  'Pred. Y3 Rank' |\n  'Avg. Rank Y1-Y3' | \n  'Pred. Y4 Rank' | \n  'Pred. Y5 Rank' | \n  'Avg. Rank Y1-Y5'\n>;\n\nconst ProspectCard: React.FC<{ prospect: DraftProspect }> = ({ prospect }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  const [logoError, setLogoError] = useState(false);\n  \n  const playerSummary = prospect.Summary || \"A detailed scouting report would go here, describing the player's strengths, weaknesses, and projected role in the NBA.\";\n  const playerImageUrl = `/player_images2024/${prospect.Name} BG Removed.png`;\n  const prenbalogoUrl = `/prenba-logos/${prospect['Pre-NBA']}.png`;\n\n  return (\n    <div className=\"w-[800px] mx-auto\">\n      {/* Header section with integrated player image, logo, and name */}\n      <div \n        className=\"relative h-48 cursor-pointer group\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        {/* Background gradient */}\n        <div className=\"absolute inset-0 bg-gradient-to-b from-gray-900/0 to-gray-900\" />\n        \n        {/* Player Image */}\n        <div className=\"absolute inset-0 flex justify-center\">\n          {!imageError ? (\n            <Image\n              src={playerImageUrl}\n              alt={prospect.Name}\n              fill\n              className=\"object-contain transition-transform duration-300 group-hover:scale-105 grayscale hover:grayscale-0\"\n              onError={() => setImageError(true)}\n              sizes=\"800px\"\n            />\n          ) : (\n            <div className=\"w-full h-full flex items-center justify-center\">\n              <LucideUser className=\"text-gray-500\" size={48} />\n            </div>\n          )}\n        </div>\n\n        {/* Pre-NBA Logo */}\n        <div className=\"absolute top-4 left-4 w-16 h-16\">\n          {!logoError ? (\n            <Image\n              src={prenbalogoUrl}\n              alt={prospect['Pre-NBA']}\n              width={64}\n              height={64}\n              className=\"object-contain grayscale\"\n              onError={() => setLogoError(true)}\n            />\n          ) : (\n            <div className=\"w-16 h-16 bg-gray-800 rounded-full flex items-center justify-center\">\n              <span className=\"text-xs text-gray-400\">{prospect['Pre-NBA']}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Name and expand button */}\n        <div className=\"absolute bottom-0 inset-x-0 p-4 flex items-end justify-between\">\n          <div className=\"space-y-1\">\n            <h2 className=\"text-2xl font-bold text-white\">{prospect.Name}</h2>\n            <p className=\"text-sm text-gray-300\">{prospect.Position} â€¢ {prospect.Age} years</p>\n          </div>\n          {isExpanded ? (\n            <ChevronUp className=\"text-white h-6 w-6\" />\n          ) : (\n            <ChevronDown className=\"text-white h-6 w-6\" />\n          )}\n        </div>\n      </div>\n\n      {/* Expanded content */}\n      {isExpanded && (\n        <div className=\"mt-4 grid grid-cols-2 gap-4 bg-gray-800/50 p-6 rounded-xs backdrop-blur-sm\">\n          {/* Left Column - Player Summary */}\n          <div className=\"text-gray-300\">\n            <h3 className=\"font-semibold text-lg mb-3 text-white\">Scouting Report</h3>\n            <p className=\"text-sm leading-relaxed\">{playerSummary}</p>\n          </div>\n\n          {/* Right Column - Stats and Info */}\n          <div className=\"space-y-4\">\n            {/* Basic Info Section */}\n            <div className=\"bg-gray-800/80 p-4 rounded-xs\">\n              <h3 className=\"font-semibold text-white mb-3\">Basic Information</h3>\n              <div className=\"grid grid-cols-2 gap-2 text-sm text-gray-300\">\n                <div>Pick: {prospect['Actual Pick']}</div>\n                <div>Team: {prospect.Team}</div>\n              </div>\n            </div>\n\n            {/* Rankings Section */}\n            <div className=\"bg-gray-800/80 p-4 rounded-xs\">\n              <h3 className=\"font-semibold text-white mb-3\">Projected Rankings</h3>\n              <div className=\"space-y-2 text-sm\">\n                {['Y1', 'Y2', 'Y3'].map((year) => (\n                  <div key={year} className=\"flex justify-between text-gray-300\">\n                    <span>Year {year.slice(1)}:</span>\n                    <span>{prospect[`Pred. ${year} Rank` as keyof DraftProspect]}</span>\n                  </div>\n                ))}\n                <div className=\"flex justify-between font-semibold border-t border-gray-700 pt-2 text-blue-400\">\n                  <span>3Y Average:</span>\n                  <span>{prospect['Avg. Rank Y1-Y3']}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction ClientSidePage({ initialProspects }: { initialProspects: DraftProspect[] }) {\n  const [sortKey, setSortKey] = useState<SortKey>('Actual Pick');\n\n  const sortedProspects = useMemo(() => {\n    return [...initialProspects].sort((a, b) => {\n      const valueA = a[sortKey];\n      const valueB = b[sortKey];\n\n      // Handle cases where either value is null, undefined, empty string, or 'N/A'\n      if (!valueA || valueA === 'N/A') return 1;  // Move a to the end\n      if (!valueB || valueB === 'N/A') return -1; // Move b to the end\n\n      // If both values exist, sort numerically\n      return Number(valueA) - Number(valueB);\n    });\n  }, [initialProspects, sortKey]);\n\n  const sortButtons: SortKey[] = [\n    'Actual Pick',\n    'Pred. Y1 Rank',\n    'Pred. Y2 Rank',\n    'Pred. Y3 Rank',\n    'Avg. Rank Y1-Y3',\n    'Pred. Y4 Rank',\n    'Pred. Y5 Rank',\n    'Avg. Rank Y1-Y5'\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 py-8\">\n      <div className=\"max-w-[800px] mx-auto px-4 mb-8\">\n        <div className=\"flex flex-wrap justify-center gap-2\">\n          {sortButtons.map((key) => (\n            <button\n              key={key}\n              onClick={() => setSortKey(key)}\n              className={`\n                px-3 py-1.5 rounded text-sm font-medium transition-colors duration-200\n                ${sortKey === key\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}\n              `}\n            >\n              {key}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"space-y-4\">\n        {sortedProspects.map((prospect) => (\n          <ProspectCard key={prospect.Name} prospect={prospect} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default function DraftProspectsPage() {\n  const [prospects, setProspects] = useState<DraftProspect[]>([]);\n\n  useEffect(() => {\n    async function fetchDraftProspects() {\n      try {\n        const response = await fetch('/2024_Draft_Class.csv');\n        const csvText = await response.text();\n\n        Papa.parse(csvText, {\n          header: true,\n          complete: (results) => {\n            setProspects(results.data as DraftProspect[]);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching draft prospects:', error);\n      }\n    }\n\n    fetchDraftProspects();\n  }, []);\n\n  return <ClientSidePage initialProspects={prospects} />;\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}