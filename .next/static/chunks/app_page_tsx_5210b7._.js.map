{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/balaravikumar/Documents/GitHub/tawnyparkmetrics.github.io/app/page.tsx"],"sourcesContent":["\"use client\";\nimport React, { useState, useMemo, useEffect } from 'react';\nimport Image, { ImageProps } from 'next/image';\nimport { LucideUser, ChevronDown, ChevronUp } from 'lucide-react';\nimport Papa from 'papaparse';\n\nexport interface DraftProspect {\n  Name: string;\n  'Actual Pick': string;\n  Team: string;\n  'Pre-NBA': string;\n  Position: string;\n  Age: string;\n  'Pred. Y1 Rank': string;\n  'Pred. Y2 Rank': string;\n  'Pred. Y3 Rank': string;\n  'Avg. Rank Y1-Y3': string;\n  'Pred. Y4 Rank': string;\n  'Pred. Y5 Rank': string;\n  'Avg. Rank Y1-Y5': string;\n  Summary?: string;\n}\n\n// Define keys that can be sorted\ntype SortKey = keyof Pick<DraftProspect, \n  'Actual Pick' | \n  'Pred. Y1 Rank' | \n  'Pred. Y2 Rank' | \n  'Pred. Y3 Rank' |\n  'Avg. Rank Y1-Y3' | \n  'Pred. Y4 Rank' | \n  'Pred. Y5 Rank' | \n  'Avg. Rank Y1-Y5'\n>;\n\nconst ProspectCard: React.FC<{ prospect: DraftProspect }> = ({ prospect }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  const [logoError, setLogoError] = useState(false);\n  \n  const playerSummary = prospect.Summary || \"A detailed scouting report would go here, describing the player's strengths, weaknesses, and projected role in the NBA.\";\n  const playerImageUrl = `/player_images2024/${prospect.Name} BG Removed.png`;\n  const prenbalogoUrl = `/prenba-logos/${prospect['Pre-NBA']}.png`;\n\n  return (\n    <div className=\"w-[800px] mx-auto\">\n      {/* Main container */}\n      <div className=\"relative\">\n        {/* Card with hover detection */}\n        <div \n          className=\"relative h-[300px] group\"\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          {/* Background Pre-NBA Logo */}\n          <div className=\"absolute inset-0 flex items-center pl-12 opacity-20\">\n            {!logoError ? (\n              <Image\n                src={prenbalogoUrl}\n                alt={prospect['Pre-NBA']}\n                width={200}\n                height={200}\n                className=\"object-contain transition-transform duration-300 group-hover:scale-105 grayscale group-hover:grayscale-0\"\n                onError={() => setLogoError(true)}\n              />\n            ) : (\n              <div className=\"w-48 h-48 bg-gray-800 rounded-full flex items-center justify-center\">\n                <span className=\"text-xl text-gray-400\">{prospect['Pre-NBA']}</span>\n              </div>\n            )}\n          </div>\n          \n          {/* Player Image */}\n          <div className=\"absolute inset-0 flex justify-center\">\n            {!imageError ? (\n              <Image\n                src={playerImageUrl}\n                alt={prospect.Name}\n                fill\n                className=\"object-contain transition-transform duration-300 group-hover:scale-105 grayscale group-hover:grayscale-0\"\n                onError={() => setImageError(true)}\n                sizes=\"800px\"\n              />\n            ) : (\n              <div className=\"w-full h-full flex items-center justify-center\">\n                <LucideUser className=\"text-gray-500\" size={48} />\n              </div>\n            )}\n          </div>\n\n          {/* Name */}\n          <div className=\"absolute bottom-0 inset-x-0 p-4\">\n            <div className=\"space-y-1\">\n              <h2 className=\"text-2xl font-bold text-white text-center\">{prospect.Name}</h2>\n              <p className=\"text-sm text-gray-300 text-center\">{prospect['Actual Pick']}</p>\n            </div>\n          </div>\n\n          {/* Hover info panel */}\n          <div \n            className={`absolute top-0 left-full h-full w-[300px] bg-gray-800/90 backdrop-blur-sm transition-transform duration-300 transform ${\n              isHovered ? 'translate-x-0' : '-translate-x-4 opacity-0 pointer-events-none'\n            }`}\n          >\n            <div className=\"p-6 space-y-4\">\n              <h3 className=\"text-lg font-semibold text-white\">Basic Information</h3>\n              <div className=\"space-y-2 text-sm text-gray-300\">\n                <div>Team: {prospect.Team}</div>\n                <div>Position: {prospect.Position}</div>\n                <div>Age: {prospect.Age}</div>\n                <div>College: {prospect['Pre-NBA']}</div>\n              </div>\n              \n              <div className=\"pt-4 border-t border-gray-700\">\n                <h4 className=\"text-sm font-semibold text-white mb-2\">Quick Stats</h4>\n                <div className=\"grid grid-cols-2 gap-2 text-sm text-gray-300\">\n                  <div>Y1 Rank: {prospect['Pred. Y1 Rank']}</div>\n                  <div>Y2 Rank: {prospect['Pred. Y2 Rank']}</div>\n                  <div>Y3 Rank: {prospect['Pred. Y3 Rank']}</div>\n                  <div>3Y Avg: {prospect['Avg. Rank Y1-Y3']}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Full-width expand button */}\n        <div \n          onClick={() => setIsExpanded(!isExpanded)}\n          className=\"cursor-pointer w-full py-2 flex items-center justify-center hover:bg-gray-800/10 transition-colors duration-200\"\n        >\n          {isExpanded ? (\n            <ChevronUp className=\"text-white h-6 w-6\" />\n          ) : (\n            <ChevronDown className=\"text-white h-6 w-6\" />\n          )}\n        </div>\n\n        {/* Expanded content - full width */}\n        {isExpanded && (\n          <div className=\"grid grid-cols-2 gap-4 bg-gray-800/50 p-6 rounded-lg backdrop-blur-sm\">\n            {/* Left Column - Scouting Report */}\n            <div className=\"text-gray-300\">\n              <h3 className=\"font-semibold text-lg mb-3 text-white\">Scouting Report</h3>\n              <p className=\"text-sm leading-relaxed\">{playerSummary}</p>\n            </div>\n\n            {/* Right Column - Rankings */}\n            <div className=\"space-y-4\">\n              <div className=\"bg-gray-800/80 p-4 rounded-lg\">\n                <h3 className=\"font-semibold text-white mb-3\">Projected Rankings</h3>\n                <div className=\"space-y-2 text-sm\">\n                  {['Y1', 'Y2', 'Y3', 'Y4', 'Y5'].map((year) => (\n                    <div key={year} className=\"flex justify-between text-gray-300\">\n                      <span>Year {year.slice(1)}:</span>\n                      <span>{prospect[`Pred. ${year} Rank` as keyof DraftProspect]}</span>\n                    </div>\n                  ))}\n                  <div className=\"flex justify-between font-semibold border-t border-gray-700 pt-2 text-blue-400\">\n                    <span>3Y Average:</span>\n                    <span>{prospect['Avg. Rank Y1-Y3']}</span>\n                  </div>\n                  <div className=\"flex justify-between font-semibold text-blue-400\">\n                    <span>5Y Average:</span>\n                    <span>{prospect['Avg. Rank Y1-Y5']}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction ClientSidePage({ initialProspects }: { initialProspects: DraftProspect[] }) {\n  const [sortKey, setSortKey] = useState<SortKey>('Actual Pick');\n\n  const sortedProspects = useMemo(() => {\n    return [...initialProspects].sort((a, b) => {\n      const valueA = a[sortKey];\n      const valueB = b[sortKey];\n\n      // Handle cases where either value is null, undefined, empty string, or 'N/A'\n      if (!valueA || valueA === 'N/A') return 1;  // Move a to the end\n      if (!valueB || valueB === 'N/A') return -1; // Move b to the end\n\n      // If both values exist, sort numerically\n      return Number(valueA) - Number(valueB);\n    });\n  }, [initialProspects, sortKey]);\n\n  const sortButtons: SortKey[] = [\n    'Actual Pick',\n    'Pred. Y1 Rank',\n    'Pred. Y2 Rank',\n    'Pred. Y3 Rank',\n    'Avg. Rank Y1-Y3',\n    'Pred. Y4 Rank',\n    'Pred. Y5 Rank',\n    'Avg. Rank Y1-Y5'\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 py-8\">\n      <div className=\"max-w-[800px] mx-auto px-4 mb-8\">\n        <div className=\"flex flex-wrap justify-center gap-2\">\n          {sortButtons.map((key) => (\n            <button\n              key={key}\n              onClick={() => setSortKey(key)}\n              className={`\n                px-3 py-1.5 rounded text-sm font-medium transition-colors duration-200\n                ${sortKey === key\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-700 text-gray-300 hover:bg-gray-600'}\n              `}\n            >\n              {key}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\"space-y-4\">\n        {sortedProspects.map((prospect) => (\n          <ProspectCard key={prospect.Name} prospect={prospect} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default function DraftProspectsPage() {\n  const [prospects, setProspects] = useState<DraftProspect[]>([]);\n\n  useEffect(() => {\n    async function fetchDraftProspects() {\n      try {\n        const response = await fetch('/2024_Draft_Class.csv');\n        const csvText = await response.text();\n\n        Papa.parse(csvText, {\n          header: true,\n          complete: (results) => {\n            setProspects(results.data as DraftProspect[]);\n          }\n        });\n      } catch (error) {\n        console.error('Error fetching draft prospects:', error);\n      }\n    }\n\n    fetchDraftProspects();\n  }, []);\n\n  return <ClientSidePage initialProspects={prospects} />;\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}